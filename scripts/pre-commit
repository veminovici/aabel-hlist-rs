#!/bin/bash
# Pre-commit hook for Rust project
# Runs formatting, linting, and testing before allowing commits

set -e

echo "🔍 Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}✓${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

# Check if we're in a Rust project
if [ ! -f "Cargo.toml" ]; then
    print_error "Not in a Rust project directory (Cargo.toml not found)"
    exit 1
fi

# Check if cargo is available
if ! command -v cargo &> /dev/null; then
    print_error "Cargo not found. Please install Rust toolchain."
    exit 1
fi

# 1. Check code formatting
echo "📝 Checking code formatting..."
if ! cargo fmt --all -- --check; then
    print_error "Code formatting check failed!"
    print_warning "Run 'cargo fmt' to fix formatting issues"
    exit 1
fi
print_status "Code formatting is correct"

# 2. Run clippy lints
echo "🔍 Running clippy lints..."
if ! cargo clippy --all-targets --all-features -- -D warnings; then
    print_error "Clippy found issues!"
    print_warning "Fix the clippy warnings before committing"
    exit 1
fi
print_status "Clippy checks passed"

# 3. Run tests
echo "🧪 Running tests..."
if ! cargo test --quiet; then
    print_error "Tests failed!"
    print_warning "Fix failing tests before committing"
    exit 1
fi
print_status "All tests passed"

# 4. Check if code compiles
echo "🔨 Checking compilation..."
if ! cargo check --quiet; then
    print_error "Code does not compile!"
    print_warning "Fix compilation errors before committing"
    exit 1
fi
print_status "Code compiles successfully"

# 5. Check for security vulnerabilities (if cargo-audit is available)
if command -v cargo-audit &> /dev/null; then
    echo "🔒 Running security audit..."
    if ! cargo audit; then
        print_warning "Security audit found issues (non-blocking)"
    else
        print_status "Security audit passed"
    fi
else
    print_warning "cargo-audit not installed, skipping security audit"
fi

echo ""
print_status "All pre-commit checks passed! 🎉"
echo "Proceeding with commit..."
